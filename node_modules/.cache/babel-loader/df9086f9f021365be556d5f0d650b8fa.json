{"ast":null,"code":"import _classCallCheck from \"/home/gerasimos/Desktop/programming/CODE_JAVASCRIPT_REACT_GLOBE/react-globe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gerasimos/Desktop/programming/CODE_JAVASCRIPT_REACT_GLOBE/react-globe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gerasimos/Desktop/programming/CODE_JAVASCRIPT_REACT_GLOBE/react-globe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gerasimos/Desktop/programming/CODE_JAVASCRIPT_REACT_GLOBE/react-globe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gerasimos/Desktop/programming/CODE_JAVASCRIPT_REACT_GLOBE/react-globe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { ShaderMaterial, UniformsUtils } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nvar ShaderPass = /*#__PURE__*/function (_Pass) {\n  _inherits(ShaderPass, _Pass);\n  function ShaderPass(shader, textureID) {\n    var _this;\n    _classCallCheck(this, ShaderPass);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShaderPass).call(this));\n    _this.textureID = textureID !== undefined ? textureID : 'tDiffuse';\n    if (shader instanceof ShaderMaterial) {\n      _this.uniforms = shader.uniforms;\n      _this.material = shader;\n    } else if (shader) {\n      _this.uniforms = UniformsUtils.clone(shader.uniforms);\n      _this.material = new ShaderMaterial({\n        defines: Object.assign({}, shader.defines),\n        uniforms: _this.uniforms,\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader\n      });\n    }\n    _this.fsQuad = new FullScreenQuad(_this.material);\n    return _this;\n  }\n  _createClass(ShaderPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n      if (this.uniforms[this.textureID]) {\n        this.uniforms[this.textureID].value = readBuffer.texture;\n      }\n      this.fsQuad.material = this.material;\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n        if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n        this.fsQuad.render(renderer);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.material.dispose();\n      this.fsQuad.dispose();\n    }\n  }]);\n  return ShaderPass;\n}(Pass);\nexport { ShaderPass };","map":null,"metadata":{},"sourceType":"module"}